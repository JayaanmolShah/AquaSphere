# Generated by Django 4.2.16 on 2024-12-08 15:58

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('home', '0014_sensor_data'),
    ]

    operations = [
        migrations.CreateModel(
            name='PredModelOutputs',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('date', models.DateField(unique=True)),
                ('predicted_rain', models.FloatField()),
                ('evapotranspiration', models.FloatField()),
                ('water_level_xgb', models.FloatField()),
                ('water_level_prophet', models.FloatField()),
                ('t_avg', models.FloatField()),
                ('t_min', models.FloatField()),
                ('t_max', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('season_name', models.TextField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='TemperatureData',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('t_avg', models.FloatField()),
                ('t_min', models.FloatField()),
                ('t_max', models.FloatField()),
                ('date', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='temperature_data', to='home.predmodeloutputs', to_field='date')),
                ('predicted_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.predmodeloutputs', to_field='date')),
            ],
        ),
        migrations.CreateModel(
            name='ShortTermOutput',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('water_level_avg', models.FloatField()),
                ('water_in_litres', models.FloatField()),
                ('water_difference', models.FloatField()),
                ('date', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='short_term_output', to='home.predmodeloutputs', to_field='date')),
            ],
        ),
        migrations.CreateModel(
            name='Requirement',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('average_req', models.FloatField()),
                ('daily_req', models.FloatField()),
                ('litre_req', models.FloatField()),
                ('date', models.DateField()),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requirements', to='home.season')),
            ],
        ),
        migrations.CreateModel(
            name='RainfallData',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('precipitation', models.FloatField()),
                ('date', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='rainfall_data', to='home.predmodeloutputs', to_field='date')),
                ('predicted_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.predmodeloutputs', to_field='date')),
            ],
        ),
        migrations.CreateModel(
            name='LongTermOutput',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('water_level_prophet', models.FloatField()),
                ('water_in_litres', models.FloatField()),
                ('req_litres', models.FloatField()),
                ('water_difference', models.FloatField()),
                ('date', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='long_term_output', to='home.predmodeloutputs', to_field='date')),
            ],
        ),
    ]
